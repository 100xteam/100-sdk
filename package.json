{
  "name": "100-sdk",
  "version": "0.0.1",
  "private": true,
  "scripts": {
    "start": "node app.js"
  },
  "dependencies": {
    "async": "*",
    "request": "*",
    "underscore": "*",
    "debug":"*"
  },
  "readme": "100-sdk\n=======\n\n##API/SDK:\n\n`var sdk100 = require('100-sdk')({ config: '...' });`\n\n\n    \n\n    \n\n    \n\n    \n\n    \n\n    \n\n###Project:\n\n\n####Query List:\n`GET /projects`\n\n#####NodeJS:\n```\nsdk100.Project.find({ }, function(err, projects){\n    if(err) throw err;//Error\n    console.log(projects);//Success\n});\n```\n\n####Detail:\n`POST /projects/:project_id`\n\n#####NodeJS:\n```\nsdk100.Project.findOne({ _id:'project_id' }, function(err, project){\n    if(err) throw err;//Error\n    if(!project) throw new Error(\"No Project\");\n\n    console.log(project);//Success\n});\n```\n\n####Update:\n`POST /projects/:project_id`\n#####NodeJS:\n```\nsdk100.Project.findOne({ _id:'project_id' }, function(err, project){\n    if(err) throw err;//Error\n    if(!project) throw new Error(\"No Project\");\n\n    //console.log(project);//Success\n\n    \n        project.namespace = ...;\n    \n        project.name = ...;\n    \n        project.type = ...;\n    \n        project.subType = ...;\n    \n        project.tagline = ...;\n    \n        project.company = ...;\n    \n        project.desc = ...;\n    \n        project.enrollment_type = ...;\n    \n        project.original_img = ...;\n    \n        project.thumb_img = ...;\n    \n        project.website_url = ...;\n    \n        project.owner = ...;\n    \n        project.location = ...;\n    \n        project.archiveDate = ...;\n    \n    project.save(function(err){\n        if(err) throw err;//Error\n        console.log(\"Successfully saved project\");//Success\n    });\n});\n```\n\n####Delete:\n`DELETE /projects/:project_id`\n\n\n#####NodeJS:\n!!!!NOTE: Matt has not written this yet\n```\nproject.remove(function(err){\n    if(err) throw err;//Error\n    console.log(\"Successfully removed project\");//Success\n});\n```\n    \n\n    \n\n###ProjectSkill:\n\n\n####Query List:\n`GET /project_skill`\n\n#####NodeJS:\n```\nsdk100.ProjectSkill.find({ }, function(err, projectSkills){\n    if(err) throw err;//Error\n    console.log(projectSkills);//Success\n});\n```\n\n####Detail:\n`POST /project_skill/:projectSkill_id`\n\n#####NodeJS:\n```\nsdk100.ProjectSkill.findOne({ _id:'projectSkill_id' }, function(err, projectSkill){\n    if(err) throw err;//Error\n    if(!projectSkill) throw new Error(\"No ProjectSkill\");\n\n    console.log(projectSkill);//Success\n});\n```\n\n####Update:\n`POST /project_skill/:projectSkill_id`\n#####NodeJS:\n```\nsdk100.ProjectSkill.findOne({ _id:'projectSkill_id' }, function(err, projectSkill){\n    if(err) throw err;//Error\n    if(!projectSkill) throw new Error(\"No ProjectSkill\");\n\n    //console.log(projectSkill);//Success\n\n    \n        projectSkill._name_cache = ...;\n    \n        projectSkill.project = ...;\n    \n        projectSkill.skill = ...;\n    \n        projectSkill.archiveDate = ...;\n    \n    projectSkill.save(function(err){\n        if(err) throw err;//Error\n        console.log(\"Successfully saved projectSkill\");//Success\n    });\n});\n```\n\n####Delete:\n`DELETE /project_skill/:projectSkill_id`\n\n\n#####NodeJS:\n!!!!NOTE: Matt has not written this yet\n```\nprojectSkill.remove(function(err){\n    if(err) throw err;//Error\n    console.log(\"Successfully removed projectSkill\");//Success\n});\n```\n    \n\n    \n\n###AccountSkill:\n\n\n####Query List:\n`GET /account_skill`\n\n#####NodeJS:\n```\nsdk100.AccountSkill.find({ }, function(err, accountSkills){\n    if(err) throw err;//Error\n    console.log(accountSkills);//Success\n});\n```\n\n####Detail:\n`POST /account_skill/:accountSkill_id`\n\n#####NodeJS:\n```\nsdk100.AccountSkill.findOne({ _id:'accountSkill_id' }, function(err, accountSkill){\n    if(err) throw err;//Error\n    if(!accountSkill) throw new Error(\"No AccountSkill\");\n\n    console.log(accountSkill);//Success\n});\n```\n\n####Update:\n`POST /account_skill/:accountSkill_id`\n#####NodeJS:\n```\nsdk100.AccountSkill.findOne({ _id:'accountSkill_id' }, function(err, accountSkill){\n    if(err) throw err;//Error\n    if(!accountSkill) throw new Error(\"No AccountSkill\");\n\n    //console.log(accountSkill);//Success\n\n    \n        accountSkill._name_cache = ...;\n    \n        accountSkill.account = ...;\n    \n        accountSkill.skill = ...;\n    \n        accountSkill.archiveDate = ...;\n    \n    accountSkill.save(function(err){\n        if(err) throw err;//Error\n        console.log(\"Successfully saved accountSkill\");//Success\n    });\n});\n```\n\n####Delete:\n`DELETE /account_skill/:accountSkill_id`\n\n\n#####NodeJS:\n!!!!NOTE: Matt has not written this yet\n```\naccountSkill.remove(function(err){\n    if(err) throw err;//Error\n    console.log(\"Successfully removed accountSkill\");//Success\n});\n```\n    \n\n    \n\n###Role:\n\n\n####Query List:\n`GET /projects/:project/roles`\n\n#####NodeJS:\n```\nsdk100.Role.find({ }, function(err, roles){\n    if(err) throw err;//Error\n    console.log(roles);//Success\n});\n```\n\n####Detail:\n`POST /projects/:project/roles/:role_id`\n\n#####NodeJS:\n```\nsdk100.Role.findOne({ _id:'role_id' }, function(err, role){\n    if(err) throw err;//Error\n    if(!role) throw new Error(\"No Role\");\n\n    console.log(role);//Success\n});\n```\n\n####Update:\n`POST /projects/:project/roles/:role_id`\n#####NodeJS:\n```\nsdk100.Role.findOne({ _id:'role_id' }, function(err, role){\n    if(err) throw err;//Error\n    if(!role) throw new Error(\"No Role\");\n\n    //console.log(role);//Success\n\n    \n        role.permissions = ...;\n    \n        role.archiveDate = ...;\n    \n        role.approvedDate = ...;\n    \n        role.assignee = ...;\n    \n        role.assignor = ...;\n    \n        role.project = ...;\n    \n    role.save(function(err){\n        if(err) throw err;//Error\n        console.log(\"Successfully saved role\");//Success\n    });\n});\n```\n\n####Delete:\n`DELETE /projects/:project/roles/:role_id`\n\n\n#####NodeJS:\n!!!!NOTE: Matt has not written this yet\n```\nrole.remove(function(err){\n    if(err) throw err;//Error\n    console.log(\"Successfully removed role\");//Success\n});\n```\n    \n\n    \n\n###Profile:\n\n\n####Query List:\n`GET /:account/profile`\n\n#####NodeJS:\n```\nsdk100.Profile.find({ }, function(err, profiles){\n    if(err) throw err;//Error\n    console.log(profiles);//Success\n});\n```\n\n####Detail:\n`POST /:account/profile/:profile_id`\n\n#####NodeJS:\n```\nsdk100.Profile.findOne({ _id:'profile_id' }, function(err, profile){\n    if(err) throw err;//Error\n    if(!profile) throw new Error(\"No Profile\");\n\n    console.log(profile);//Success\n});\n```\n\n####Update:\n`POST /:account/profile/:profile_id`\n#####NodeJS:\n```\nsdk100.Profile.findOne({ _id:'profile_id' }, function(err, profile){\n    if(err) throw err;//Error\n    if(!profile) throw new Error(\"No Profile\");\n\n    //console.log(profile);//Success\n\n    \n        profile.name = ...;\n    \n        profile.desc = ...;\n    \n        profile.type = ...;\n    \n        profile.company = ...;\n    \n        profile.tagline = ...;\n    \n        profile.original_img = ...;\n    \n        profile.thumb_img = ...;\n    \n        profile.facebook_url = ...;\n    \n        profile.twitter_url = ...;\n    \n        profile.linkedin_url = ...;\n    \n        profile.instagram_url = ...;\n    \n        profile.github_url = ...;\n    \n        profile.website_url = ...;\n    \n        profile.blog_url = ...;\n    \n        profile.owner = ...;\n    \n        profile.location = ...;\n    \n        profile.archiveDate = ...;\n    \n        profile.approveDate = ...;\n    \n        profile.approveUser = ...;\n    \n    profile.save(function(err){\n        if(err) throw err;//Error\n        console.log(\"Successfully saved profile\");//Success\n    });\n});\n```\n\n####Delete:\n`DELETE /:account/profile/:profile_id`\n\n\n#####NodeJS:\n!!!!NOTE: Matt has not written this yet\n```\nprofile.remove(function(err){\n    if(err) throw err;//Error\n    console.log(\"Successfully removed profile\");//Success\n});\n```\n    \n\n    \n\n###Skill:\n\n\n####Query List:\n`GET /skills`\n\n#####NodeJS:\n```\nsdk100.Skill.find({ }, function(err, skills){\n    if(err) throw err;//Error\n    console.log(skills);//Success\n});\n```\n\n####Detail:\n`POST /skills/:skill_id`\n\n#####NodeJS:\n```\nsdk100.Skill.findOne({ _id:'skill_id' }, function(err, skill){\n    if(err) throw err;//Error\n    if(!skill) throw new Error(\"No Skill\");\n\n    console.log(skill);//Success\n});\n```\n\n####Update:\n`POST /skills/:skill_id`\n#####NodeJS:\n```\nsdk100.Skill.findOne({ _id:'skill_id' }, function(err, skill){\n    if(err) throw err;//Error\n    if(!skill) throw new Error(\"No Skill\");\n\n    //console.log(skill);//Success\n\n    \n        skill.name = ...;\n    \n        skill.namespace = ...;\n    \n        skill.type = ...;\n    \n        skill.value = ...;\n    \n        skill.archiveDate = ...;\n    \n    skill.save(function(err){\n        if(err) throw err;//Error\n        console.log(\"Successfully saved skill\");//Success\n    });\n});\n```\n\n####Delete:\n`DELETE /skills/:skill_id`\n\n\n#####NodeJS:\n!!!!NOTE: Matt has not written this yet\n```\nskill.remove(function(err){\n    if(err) throw err;//Error\n    console.log(\"Successfully removed skill\");//Success\n});\n```\n    \n\n    \n\n###Location:\n\n\n####Query List:\n`GET /locations`\n\n#####NodeJS:\n```\nsdk100.Location.find({ }, function(err, locations){\n    if(err) throw err;//Error\n    console.log(locations);//Success\n});\n```\n\n####Detail:\n`POST /locations/:location_id`\n\n#####NodeJS:\n```\nsdk100.Location.findOne({ _id:'location_id' }, function(err, location){\n    if(err) throw err;//Error\n    if(!location) throw new Error(\"No Location\");\n\n    console.log(location);//Success\n});\n```\n\n####Update:\n`POST /locations/:location_id`\n#####NodeJS:\n```\nsdk100.Location.findOne({ _id:'location_id' }, function(err, location){\n    if(err) throw err;//Error\n    if(!location) throw new Error(\"No Location\");\n\n    //console.log(location);//Success\n\n    \n        location.name = ...;\n    \n        location.namespace = ...;\n    \n        location.desc = ...;\n    \n        location.type = ...;\n    \n        location.tagline = ...;\n    \n        location.original_img = ...;\n    \n        location.thumb_img = ...;\n    \n        location.logo_img = ...;\n    \n        location.facebook_url = ...;\n    \n        location.twitter_url = ...;\n    \n        location.linkedin_url = ...;\n    \n        location.instagram_url = ...;\n    \n        location.website_url = ...;\n    \n        location.blog_url = ...;\n    \n        location.archiveDate = ...;\n    \n        location.host = ...;\n    \n    location.save(function(err){\n        if(err) throw err;//Error\n        console.log(\"Successfully saved location\");//Success\n    });\n});\n```\n\n####Delete:\n`DELETE /locations/:location_id`\n\n\n#####NodeJS:\n!!!!NOTE: Matt has not written this yet\n```\nlocation.remove(function(err){\n    if(err) throw err;//Error\n    console.log(\"Successfully removed location\");//Success\n});\n```\n    \n\n    \n\n###Curator:\n\n\n####Query List:\n`GET /locations/:location/curators`\n\n#####NodeJS:\n```\nsdk100.Curator.find({ }, function(err, curators){\n    if(err) throw err;//Error\n    console.log(curators);//Success\n});\n```\n\n####Detail:\n`POST /locations/:location/curators/:curator_id`\n\n#####NodeJS:\n```\nsdk100.Curator.findOne({ _id:'curator_id' }, function(err, curator){\n    if(err) throw err;//Error\n    if(!curator) throw new Error(\"No Curator\");\n\n    console.log(curator);//Success\n});\n```\n\n####Update:\n`POST /locations/:location/curators/:curator_id`\n#####NodeJS:\n```\nsdk100.Curator.findOne({ _id:'curator_id' }, function(err, curator){\n    if(err) throw err;//Error\n    if(!curator) throw new Error(\"No Curator\");\n\n    //console.log(curator);//Success\n\n    \n        curator._account_name = ...;\n    \n        curator._location_name = ...;\n    \n        curator.location = ...;\n    \n        curator.account = ...;\n    \n        curator.archiveDate = ...;\n    \n    curator.save(function(err){\n        if(err) throw err;//Error\n        console.log(\"Successfully saved curator\");//Success\n    });\n});\n```\n\n####Delete:\n`DELETE /locations/:location/curators/:curator_id`\n\n\n#####NodeJS:\n!!!!NOTE: Matt has not written this yet\n```\ncurator.remove(function(err){\n    if(err) throw err;//Error\n    console.log(\"Successfully removed curator\");//Success\n});\n```\n    \n\n\n//TOOD: Add Javasript Angular SDK\n\n",
  "readmeFilename": "README.md",
  "description": "100-sdk =======",
  "_id": "100-sdk@0.0.1",
  "dist": {
    "shasum": "9260d4124809f852e800fe4d8b2abad575fa8548"
  },
  "_resolved": "git+ssh://git@github.com:schematical/100-sdk.git#38dd423f3fa47d9abf4b3c5b175443c524f66dfd",
  "_from": "100-sdk@git+ssh://git@github.com:schematical/100-sdk.git#master"
}
